{"version":3,"sources":["assets/carrot.png","Components/KgvItem.js","useLocalStorage.js","Components/Map.js","Components/Header.js","Components/FreieGaerten.js","Components/Inserieren.js","Components/VerwaltungsItem.js","Components/Verwaltung.js","Components/AnzeigenItem.js","Components/FreiItem.js","Components/FavoritenMap.js","Components/FavoritenFreiItem.js","Components/FavoritenVereinItem.js","App.js","reportWebVitals.js","index.js"],"names":["KgvItem","favouritedItems","verein","favClick","web","email","isFavourite","find","el","_id","Card","border","className","Body","Title","kgvname","Subtitle","color","size","adresse","strasse","plz","stadt","href","Container","Row","Button","onClick","variant","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","Map","kgvs","favourites","setFavourites","gartenid","carrotIcon","L","icon","iconUrl","carrot","iconSize","shadowSize","iconAnchor","shadowAnchor","popupAnchor","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","map","Marker","position","geometry","coordinates","Popup","style","width","emailadresse","website","gardenid","indexOf","filter","Header","fluid","Col","Navbar","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Item","to","FreieGaerten","gaerten","ownAnzeige","setMerkFrei","merkFrei","merkFreiItems","isMerkFrei","freiId","garten","kgv","Text","titel","beschreibung","preis","Inserieren","anzeige","setAnzeige","handleSubmit","xs","Form","onSubmit","Group","controlId","Label","Control","onChange","e","target","type","name","as","rows","pachtkosten","gartenqm","verf√ºgbar","telefon","VerwaltungsItem","eigAnzeige","setOwnAnzeige","deleted","setDeleted","axios","delete","then","res","Verwaltung","AnzeigenItem","useParams","setIsLoading","setError","useEffect","searchQuery","fetch","ok","Error","json","data","catch","err","Img","src","block","FreiItem","freigarten","merkClick","FavoritenMap","FavoritenFreiItem","FavoritenVereinItem","App","setKgvs","setGaerten","gartemqm","history","useHistory","userAnzeigen","favouriteGarden","merkFreiGarten","exact","path","height","preventDefault","post","push","Image","rounded","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0891ee12.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/carrot.21d529a5.png\";","import React from 'react';\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\nimport { GeoAltFill, Envelope, Globe2, Heart, HeartFill } from 'react-bootstrap-icons';\n\n\n\n\n\nfunction KgvItem({favouritedItems, verein, favClick}) {\n\n \n  const web = verein.web\n  const email = verein.email\n\n  const isFavourite = () => {\n    return favouritedItems.find((el) => el._id === verein._id) ? true : false\n  }\n\n    return (\n        <Card border=\"success\" className=\"mb-1\" >\n            <Card.Body >\n                <Card.Title>{verein.kgvname}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-2\"color=\"green\" size={17}/>{verein.adresse.strasse}, {verein.adresse.plz} {verein.adresse.stadt}</Card.Subtitle>\n                {email && <Card.Subtitle className=\"mb-2 text-muted\"><Envelope className=\"mr-2\" color=\"green\" size={17}/>{verein.email}</Card.Subtitle>}\n                {web && <Card.Subtitle href={verein.web} className=\"mb-3 text-muted\"><Globe2 className=\"mr-2\" color=\"green\" size={17} /><a className=\"mb-3 text-muted\" href={verein.web}>{verein.web}</a></Card.Subtitle>}\n                <Container className=\"justify-content-center\">\n                    <Row >\n                        <Button onClick={favClick} size=\"sm\" className=\"m-1 \" variant='outline-danger'>\n                            {isFavourite()? <HeartFill className=\"mr-2\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\n                            {isFavourite() ? 'Entfernen' : 'Merken'}\n                        </Button>\n                        <Button size=\"sm\" className=\"m-1\" variant=\"outline-danger\">Teilen</Button>\n                    </Row>\n                </Container>\n              \n                \n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default KgvItem\n\n/* variant={isFavourite() ? 'danger' : 'outline-danger'} */","import {useState} from \"react\";\n\nfunction useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n      try {\n        // Get from local storage by key\n        const item = window.localStorage.getItem(key);\n        // Parse stored json or if none return initialValue\n        return item ? JSON.parse(item) : initialValue;\n      } catch (error) {\n        // If error also return initialValue\n        console.log(error);\n        return initialValue;\n      }\n    });\n  \n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = value => {\n      try {\n        // Allow value to be a function so we have same API as useState\n        const valueToStore =\n          value instanceof Function ? value(storedValue) : value;\n        // Save state\n        setStoredValue(valueToStore);\n        // Save to local storage\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      } catch (error) {\n        // A more advanced implementation would handle the error case\n        console.log(error);\n      }\n    };\n  \n    return [storedValue, setValue];\n  }\n\n export default useLocalStorage; ","import React, {useState, useEffect} from \"react\";\nimport {MapContainer, TileLayer, Marker, Popup} from \"react-leaflet\";\nimport L from \"leaflet\";\nimport  carrot from '../assets/carrot.png';\nimport KgvItem from \"./KgvItem\";\nimport useLocalStorage from '../useLocalStorage';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport Favourites from \"./Favourites\";\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\nimport { GeoAltFill, Envelope, Globe2, Heart, HeartFill } from 'react-bootstrap-icons';\n\n\n\nfunction Map({kgvs, favourites, favouritedItems, setFavourites}) {\n\n  \n  function favouriteGarden(gardenid) {\n  \n      console.log(gardenid)\n      console.log(favourites.indexOf(gardenid))\n  \n      if (favourites.indexOf(gardenid) === -1){\n        setFavourites([\n          ...favourites,\n          gardenid\n        ])\n      } else {\n        \n        setFavourites(favourites.filter(item => item != gardenid))\n      }\n    }\n\n    const isFavourite = (gartenid) => {\n      return favouritedItems.find((el) => el._id === gartenid) ? true : false\n    }\n    \n    const web = (website) => {\n      return website ? true : false\n    }\n\n    const email = (emailadresse) => {\n      return emailadresse ? true : false\n    }\n\n  const position = [51.330743159430824, 12.36348580378971]\n  const carrotIcon = L.icon({\n    iconUrl: carrot,\n    iconSize:     [38, 38], // size of the icon\n    shadowSize:   [50, 64], // size of the shadow\n    iconAnchor:   [19, 38],\n    shadowAnchor: [4, 62],  // the same for the shadow\n    popupAnchor:  [0, -38]\n  });\n  \n\n\n    return (\n              <MapContainer center={position} zoom={13} scrollWheelZoom={false}>\n              <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              />\n            {kgvs.map(verein => (\n                <Marker\n                  key={verein._id}\n                  icon = {carrotIcon}\n                  position={[\n                    verein.geometry.coordinates[0],\n                    verein.geometry.coordinates[1]\n                  ]}\n                >\n                  <Popup >\n                    <Card border=\"success\" style={{ width: '19rem' }} >\n                      <Card.Body >\n                          <Card.Title>{verein.kgvname}</Card.Title>\n                          <Card.Subtitle className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-2\"color=\"green\" size={17}/>{verein.adresse.strasse}, {verein.adresse.plz} {verein.adresse.stadt}</Card.Subtitle>\n                          {email(verein.email) && <Card.Subtitle className=\"mb-2 text-muted\"><Envelope className=\"mr-2\" color=\"green\" size={17}/>{verein.email}</Card.Subtitle>}\n                          {web(verein.web) && <Card.Subtitle href={verein.web} className=\"mb-3 text-muted\"><Globe2 className=\"mr-2\" color=\"green\" size={17} /><a className=\"mb-3 text-muted\" href={verein.web}>{verein.web}</a></Card.Subtitle>}\n                          <Container className=\"justify-content-center\">\n                              <Row >\n                                  <Button onClick={() => favouriteGarden(verein._id)} size=\"sm\" className=\"m-1 \" variant='outline-danger'>\n                                      {isFavourite(verein._id)? <HeartFill className=\"mr-2\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\n                                      {isFavourite(verein._id)? 'Entfernen' : 'Merken'}\n                                  </Button>\n                                  <Button size=\"sm\" className=\"m-1\" variant=\"outline-danger\">Teilen</Button>\n                              </Row>\n                          </Container>\n                      </Card.Body>\n                    </Card>\n                  </Popup>\n                </Marker>  \n              ))}\n            </MapContainer>\n    )\n}\n\nexport default Map\n","import React from 'react';\nimport { Container, Col, Row, Nav, Navbar, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\nimport  carrot from '../assets/carrot.png';\nimport { NavLink } from 'react-router-dom';\n\nfunction Header() {\n\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col>\n            <Navbar expand=\"sm\">\n          {/*   <Navbar.Brand href=\"#home\">\n                <img\n                    src=\"../assets/carrotbrand.svg\"\n                    width=\"30\"\n                    height=\"30\"\n                    className=\"d-inline-block align-top\"\n                    alt=\"React Bootstrap logo\"\n                />\n            </Navbar.Brand> */}    \n            <Navbar.Brand href=\"/\"><h4 className=\"text-danger\"><strong>GO SCHREBER</strong></h4></Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse className=\"justify-content-end\" id=\"basic-navbar-nav\" >\n                <Nav>\n                    <Nav.Item  className=\"ml-6\">\n                        <NavLink to='/'><Button className=\"mr-3\" variant=\"success\">Vereine</Button></NavLink>\n                    </Nav.Item>\n                    <Nav.Item className=\"ml-6\">\n                        <NavLink to=\"/frei\"><Button className=\"mr-3\" variant=\"success\">Freie G√§rten</Button></NavLink>\n                    </Nav.Item>\n                    <Nav.Item className=\"ml-6\">\n                        <NavLink to=\"/inserieren\"><Button className=\"mr-3\" variant=\"success\">Anzeige aufgeben</Button></NavLink>\n                    </Nav.Item>\n                    <Nav.Item className=\"ml-6\">\n                        <NavLink to=\"/verwalten\"><Button className=\"mr-3\" variant=\"success\">Anzeigen verwalten</Button></NavLink>\n                    </Nav.Item>\n                    <Nav.Item className=\"ml-6\">\n                        <NavLink to=\"/merken\"><Button variant=\"success\">Merkliste</Button></NavLink>\n                    </Nav.Item>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n                </Col>\n            </Row>\n        </Container>\n       \n      \n    )\n\n}\n\nexport default Header\n","import React, {useState, useEffect} from \"react\";\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\nimport {MapContainer, TileLayer, Marker, Popup} from \"react-leaflet\";\nimport L from \"leaflet\";\nimport  carrot from '../assets/carrot.png';\nimport {NavLink} from 'react-router-dom';\nimport { GeoAltFill, Heart, HeartFill } from 'react-bootstrap-icons';\n\n    \nfunction FreieGaerten({gaerten, ownAnzeige, setMerkFrei, merkFrei, merkFreiItems}) {\n\n  \n  function merkFreiGarten(gartenid) {\n\n    console.log(gartenid)\n    console.log(merkFrei.indexOf(gartenid))\n    console.log(ownAnzeige)\n\n    if (merkFrei.indexOf(gartenid) === -1){\n      setMerkFrei([\n        ...merkFrei,\n        gartenid\n      ])\n    } else {\n      \n      setMerkFrei(merkFrei.filter(item => item != gartenid))\n    }\n  }\n\n  const isMerkFrei = (freiId) => {\n    return merkFreiItems.find((el) => el._id === freiId) ? true : false\n  }\n  \n\n    const position = [51.330743159430824, 12.36348580378971]\n    const carrotIcon = L.icon({\n      iconUrl: carrot,\n      iconSize:     [38, 38], // size of the icon\n      shadowSize:   [50, 64], // size of the shadow\n      iconAnchor:   [19, 38],\n      shadowAnchor: [4, 62],  // the same for the shadow\n      popupAnchor:  [0, -38]\n    });\n\n    return (\n                <MapContainer center={position} zoom={13} scrollWheelZoom={true}>\n                  <TileLayer\n                  attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                  />\n                {gaerten.map(garten => (\n                    <Marker\n                      key={garten._id}\n                      icon = {carrotIcon}\n                      position={[\n                        garten.kgv.geometry.coordinates[0],\n                        garten.kgv.geometry.coordinates[1]\n                      ]}\n                    >\n                      <Popup>\n                          <Card border=\"success\" style={{ width: '19rem' }}>\n                            <Card.Body className=\"mb-1\"> \n                                <Card.Text className=\"mb-1 text-muted\"><GeoAltFill className=\"mr-1\" color=\"green\" size={12}/>{garten.kgv.kgvname}</Card.Text>\n                                <Card.Title className=\"mb-1 text-success\"><h4>{garten.titel}</h4></Card.Title>\n                                <Card.Text className=\"mb-1 mt-1 text-muted text-truncate\">{garten.beschreibung}</Card.Text>\n                                <Card.Subtitle className=\"mb-1 mt-1 text-success\"><h5>{garten.preis}‚Ç¨</h5></Card.Subtitle>\n                                <Row >\n                                    <NavLink to={`/frei/${garten._id}`}>\n                                        <Button size=\"sm\" className=\"mr-2 ml-3\" variant=\"outline-danger\">Details</Button>\n                                    </NavLink>\n                                    <Button onClick={() => merkFreiGarten(garten._id)} size=\"sm\" className=\"mr-2 \" variant='outline-danger'>\n                                    {isMerkFrei(garten._id)? <HeartFill className=\"mr-2\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\n                                    {isMerkFrei(garten._id)? 'Entfernen' : 'Merken'}\n                          </Button>\n                                        <Button size=\"sm\" className=\"mr-2\" variant=\"outline-danger\">Teilen</Button>\n                                </Row>\n                            </Card.Body>\n                        </Card>\n                  </Popup>\n                    </Marker>  \n                  ))}\n                </MapContainer>\n    )\n}\n\nexport default FreieGaerten\n","import React, {useState} from 'react';\nimport {Card, Container, Row, Col, Form, Button} from \"react-bootstrap\";\n\n\n\n\n\nfunction Inserieren({kgvs, anzeige, setAnzeige, handleSubmit}) {\n\n\n/* \nconst [gartenId, setGartenId] = useState(\"\"); */\n    \nfunction handleSelect(e){\n    const verein = (kgvs.filter((verein) => verein.kgvname == e.target.value))\n\n    const kgv = (verein.map(el => el._id))\n    \n    setAnzeige({...anzeige, kgv:kgv})\n }\n\n\n\n/*\n      if (favourites.indexOf(gardenid) === -1){\n        setFavourites([\n          ...favourites,\n          gardenid\n        ])\n      } else {\n        \n        setFavourites(favourites.filter(item => item != gardenid))\n      }\n*/\n\nreturn (\n   \n     <Container>\n            <Row className=\"justify-content-md-center mt-5\">\n                    <Col xs={8}>\n                       <Card  border=\"success\" className=\"justify-content-md-center\" >\n                                <Form onSubmit={handleSubmit} className=\"m-3\" >\n                                <h5 className=\"mb-3\">\n                                   Anzeigendetails\n                                </h5>\n                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                        <Form.Label>Titel der Anzeige</Form.Label>\n                                    <Form.Control value={anzeige.titel} onChange={(e) => setAnzeige({...anzeige, titel:e.target.value})} type=\"text\" name=\"titel\"  as=\"textarea\" rows={1} />\n                                    </Form.Group>\n\n                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                        <Form.Label>Beschreibung</Form.Label>\n                                    <Form.Control value={anzeige.beschreibung} onChange={(e) => setAnzeige({...anzeige, beschreibung:e.target.value})} type=\"text\" name=\"beschreibung\" as=\"textarea\" rows={3} />\n                                   </Form.Group>\n                                            <Row>\n                                                <Col>\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                                        <Form.Label>Preis</Form.Label>\n                                                        <Form.Control value={anzeige.preis} onChange={(e) => setAnzeige({...anzeige, preis:e.target.value})}type=\"text\" name=\"preis\" as=\"textarea\" rows={1} />\n                                                    </Form.Group>\n                                                </Col>\n                                                <Col>\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                                        <Form.Label>J√§hrliche Pachtkosten</Form.Label>\n                                                        <Form.Control value={anzeige.pachtkosten} onChange={(e) => setAnzeige({...anzeige, pachtkosten:e.target.value})}type=\"text\" name=\"pachtkosten\" as=\"textarea\" rows={1} />\n                                                    </Form.Group>\n                                                </Col>\n                                                \n                                                <Col>\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                                        <Form.Label>Gr√∂√üe</Form.Label>\n                                                        <Form.Control value={anzeige.gartenqm} onChange={(e) => setAnzeige({...anzeige, gartenqm:e.target.value})}type=\"text\" name=\"gartenqm\" as=\"textarea\" rows={1} />\n                                                    </Form.Group>\n                                                </Col>\n                                                <Col>\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                                        <Form.Label>Verf√ºgbar ab</Form.Label>\n                                                        <Form.Control value={anzeige.verf√ºgbar} onChange={(e) => setAnzeige({...anzeige, verf√ºgbar:e.target.value})}type=\"text\" name=\"verf√ºgbar\"  as=\"textarea\" rows={1} />\n                                                    </Form.Group>\n                                                </Col>\n                                            </Row>\n\n                                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                                    <Form.Label>Kleingartenverein</Form.Label>\n                                                    <Form.Control onChange={handleSelect} type=\"\" name=\"kgvname\" \n                                                    as=\"select\">\n                                                    <option>bitte ausw√§hlen</option>\n                                                    {kgvs.map(verein => <option>{verein.kgvname}</option>)}\n                                                    </Form.Control>\n                                                </Form.Group>\n                                                <h5 className=\"mb-3\">\n                                                    Anbieterdetails\n                                                </h5>\n                                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                                    <Form.Label>Name</Form.Label>\n                                                    <Form.Control value={anzeige.name} onChange={(e) => setAnzeige({...anzeige, name:e.target.value})} type=\"text\" name=\"name\"  as=\"textarea\" rows={1} />\n                                                 </Form.Group>\n                                                 <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                                    <Form.Label>Email</Form.Label>\n                                                    <Form.Control value={anzeige.email} onChange={(e) => setAnzeige({...anzeige, email:e.target.value})} type=\"text\" name=\"email\"  as=\"textarea\" rows={1} />\n                                                 </Form.Group>\n                                                 <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                                    <Form.Label>Telefonnummer</Form.Label>\n                                                    <Form.Control value={anzeige.telefon} onChange={(e) => setAnzeige({...anzeige, telefon:e.target.value})} type=\"text\" name=\"telefon\"  as=\"textarea\" rows={1} />\n                                                 </Form.Group>\n                                                <Button variant=\"success\" type=\"submit\">\n                                                Anzeige aufgeben\n                                                </Button>\n                                </Form>\n                            </Card>\n                    </Col>\n                </Row>\n        </Container>\n\n    )\n}\n\nexport default Inserieren\n","import React, {useState} from 'react';\nimport {Container, Col, Row, Card, Button, Image} from \"react-bootstrap\";\nimport { GeoAltFill, Heart, HeartFill } from 'react-bootstrap-icons';\nimport axios from 'axios';\nimport {NavLink} from 'react-router-dom';\n\n\n\nfunction VerwaltungsItem({eigAnzeige, setOwnAnzeige, ownAnzeige}) {\n  \n\n    const id = eigAnzeige._id\n    const [deleted, setDeleted] = useState(false)\n    \n    \n    function handleDelete () {\n        axios\n        .delete('https://goschreber.herokuapp.com/anzeigens/'+id)\n        .then((res) => {console.log(res);\n                        setDeleted(true);\n        })\n      }\n    \n\n    return (\n        <Container>\n        <Row>\n            <Col>\n            {deleted?\n            <Card border=\"success\">\n                <Card.Body className=\"mt-1\">\n                        <Card.Title /* className=\"text-danger\" */><h4>Anzeige gel√∂scht</h4></Card.Title>\n                </Card.Body>\n            </Card>\n               :      \n            <Card border=\"success\" className=\"mb-1\">\n                <Card.Body className=\"m-1\">\n                    <Row>\n                    <p className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-1\" color=\"green\" size={12}/>{eigAnzeige.kgv?.kgvname}</p>\n                    </Row>\n                    <Row>\n                        <Card.Title>{eigAnzeige.titel}</Card.Title>\n                    </Row>\n                    <Row>\n                        <p className=\"mb-2 text-muted row-3 text-truncate\">{eigAnzeige.beschreibung}</p>\n                    </Row>\n                    <Row>\n                        <h5 className=\"text-success\"><strong>{eigAnzeige.preis}‚Ç¨</strong></h5>\n                    </Row>\n                    <Row>\n                        <Button onClick={handleDelete} size=\"sm\" className=\"mr-2\" variant=\"danger\">L√∂schen</Button>\n                        <Button size=\"sm\" className=\"mr-2\" variant=\"success\">Bearbeiten</Button>\n                        <NavLink to={`/frei/${eigAnzeige._id}`}>\n                                <Button size=\"sm\" className=\"mr-2\" variant=\"outline-success\">Details</Button>\n                        </NavLink>\n                    </Row>\n                </Card.Body>\n            </Card>}\n        </Col>\n    </Row>\n</Container>\n    )\n}\n\nexport default VerwaltungsItem\n","import React from 'react';\nimport VerwaltungsItem from \"./VerwaltungsItem\";\nimport axios from 'axios';\n\n\nfunction Verwaltung({userAnzeigen, ownAnzeige, setOwnAnzeige}) {\n\n   \n    return (\n        <div>\n             \n        </div>\n    )\n}\n\nexport default Verwaltung\n","import React, {useState, useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {Container, Col, Row, Card, Button} from \"react-bootstrap\";\nimport { GeoAltFill, PersonCircle, Telephone, Envelope } from 'react-bootstrap-icons';\n\n\n\n\nfunction AnzeigenItem() {\n\n    const {id} = useParams ();\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(false);\n    const [anzeige, setAnzeige] = useState([]);\n\n    const loadAnzeigeById = (searchQuery) => {\n        const API_URL = \"https://goschreber.herokuapp.com\"\n        const url = `${API_URL}/anzeigens/${id}`\n        setIsLoading(true);\n        setError(false);\n    \n        fetch(url)\n          .then((res) => {\n          \n          console.log(res);\n    \n            if (!res.ok) throw new Error(\"Oh noo\");\n            setIsLoading(false);\n            return res.json();\n          })\n          .then((json) => setAnzeige(json.data))\n          .catch((err) => setError(true));\n    \n      };\n    \n      useEffect(loadAnzeigeById, []);\n\n        console.log(anzeige)\n\n    return (\n            <Container fluid>\n                <Row className=\"justify-content-md-center mt-5\">\n                    <Col xs={6}>\n                        <Card border=\"success\" className=\"mb-1\">\n                            <Card.Body>\n                                    <Card.Img className=\"mb-3\" variant=\"top\" src=\"https://cdn.kiekmo.hamburg/vary/2020/02/listicle-kleingarten-lokstedt-shutterstock_437208574_content-728x410.jpg\" />\n                                    <Card.Title className=\"text-danger\"><h4>{anzeige.titel}</h4></Card.Title>\n                                    <Card.Text className=\"text-muted mb-3\">\n                                        <GeoAltFill className=\"mr-1\" color=\"green\" size={12}/> KGV \"{anzeige.kgv?.kgvname}\", {anzeige.kgv?.adresse.strasse}, {anzeige.kgv?.adresse.plz} Leipzig\n                                    </Card.Text>\n                                    <Card.Subtitle className=\"mb-3\">Beschreibung</Card.Subtitle>    \n                                    <Card.Text className=\"mb-3\">{anzeige.beschreibung}</Card.Text>\n                                    <Card.Subtitle className=\"mb-2\">Details</Card.Subtitle>\n                                    <Row>\n                                        <Col xs={4}>\n                                            <Card.Text className=\"mb-1 text-muted\">Preis:</Card.Text>\n                                        </Col>\n                                        <Col xs={2}>\n                                            <Card.Text className=\"mb-1\">{anzeige.preis}‚Ç¨</Card.Text>\n                                        </Col>\n                                        <Col xs={4}>\n                                            <Card.Text className=\"mb-1 text-muted\">Gartengr√∂√üe:</Card.Text>\n                                        </Col>\n                                        <Col xs={2}>\n                                            <Card.Text className=\"mb-1\">{anzeige.gartenqm}qm</Card.Text>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col xs={4}>\n                                            <Card.Text className=\"mb-1 text-muted\">J√§hrliche Pachtkosten:</Card.Text>\n                                        </Col>\n                                        <Col xs={2}>\n                                            <Card.Text className=\"mb-1\">{anzeige.pachtkosten}‚Ç¨</Card.Text>\n                                        </Col>\n                                        <Col xs={4}>\n                                            <Card.Text className=\"mb-1 text-muted\">Verf√ºgbar ab:</Card.Text>\n                                        </Col>\n                                        <Col xs={2}>\n                                            <Card.Text className=\"mb-1\">{anzeige.verf√ºgbar}</Card.Text>\n                                        </Col>\n                                    </Row>\n                            </Card.Body>\n                        </Card>\n                            </Col>\n                       <Col xs={3}>\n                            <Row>\n                                <Card border=\"success\" style={{ width: '18rem' }} >\n                                 <Card.Body>\n                                    <Button className=\"mr-1\" variant=\"outline-danger\" block>Merken</Button>\n                                    <Button className=\"mr-1\" variant=\"outline-danger\" block>Teilen</Button>      \n                                    <Card.Subtitle className=\"mt-3 mb-2\"><PersonCircle className=\"mr-3\"color=\"green\" size={17}/>{anzeige.name}</Card.Subtitle>\n                                    <Card.Subtitle className=\"mb-2\"><Envelope className=\"mr-3\" color=\"green\" size={17}/>{anzeige.email}</Card.Subtitle>\n                                    <Card.Subtitle className=\"mb-2\"><Telephone className=\"mr-3\" color=\"green\" size={17}/>{anzeige.telefon}</Card.Subtitle>\n                                 </Card.Body>\n                                </Card>\n                            </Row>            \n                        </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default AnzeigenItem\n","import React from 'react';\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\nimport { GeoAltFill, Heart, HeartFill } from 'react-bootstrap-icons';\nimport {NavLink} from 'react-router-dom';\n\n\n\nfunction FreiItem({freigarten, merkClick, merkFreiItems}) {\n\n    const isMerkFrei = () => {\n        return merkFreiItems.find((el) => el._id === freigarten._id) ? true : false\n      }\n\n    return (\n            <Container>\n                <Row>\n                <Card border=\"success\" className=\"mb-1\" style={{ width: '26rem' }}>\n                    <Card.Body className=\"m-1\">\n                        <Row>\n                        <p className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-1\" color=\"green\" size={12}/>{freigarten.kgv.kgvname}</p>\n                        </Row>\n                        <Row>\n                            <Card.Title>{freigarten.titel}</Card.Title>\n                        </Row>\n                         <Row>\n                            <p className=\"mb-2 text-muted row-3 text-truncate\">{freigarten.beschreibung}</p>\n                         </Row>\n                        <Row>\n                            <h5 className=\"text-success\"><strong>{freigarten.preis}‚Ç¨</strong></h5>\n                        </Row>\n    \n                        <Row>\n                            <NavLink to={`/frei/${freigarten._id}`}>\n                                <Button size=\"sm\" className=\"mr-2\" variant=\"outline-danger\">Details</Button>\n                            </NavLink>\n                            <Button onClick={merkClick} size=\"sm\" className=\"mr-2 \" variant='outline-danger'>\n                            {isMerkFrei()? <HeartFill className=\"mr-2\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\n                            {isMerkFrei() ? 'Entfernen' : 'Merken'}\n                        </Button>\n                            <Button size=\"sm\" className=\"mr-2\" variant=\"outline-danger\">Teilen</Button>     \n                        </Row>\n                      \n                    </Card.Body>\n                </Card>\n            </Row>\n        </Container>\n        \n      \n    )\n}\n\nexport default FreiItem\n","import React, {useState} from \"react\";\nimport {MapContainer, TileLayer, Marker, Popup} from \"react-leaflet\";\nimport L from \"leaflet\";\nimport  carrot from '../assets/carrot.png';\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\nimport { GeoAltFill, Envelope, Globe2, Heart, HeartFill } from 'react-bootstrap-icons';\nimport {NavLink} from 'react-router-dom';\n\nfunction FavoritenMap({favouritedItems, merkFreiItems, setFavourites, favourites, setMerkFrei, merkFrei }) {\n\n\n    function favouriteGarden(gardenid) {\n  \n        console.log(gardenid)\n        console.log(favourites.indexOf(gardenid))\n    \n        if (favourites.indexOf(gardenid) === -1){\n          setFavourites([\n            ...favourites,\n            gardenid\n          ])\n        } else {\n          \n          setFavourites(favourites.filter(item => item != gardenid))\n        }\n      }\n     \n      const isFavourite = (gartenid) => {\n        return favouritedItems.find((el) => el._id === gartenid) ? true : false\n      }\n\n      const web = (website) => {\n        return website ? true : false\n      } \n /*77777777777777777777777777777777777777777777777777777777777777777777777 */\n      function merkFreiGarten(gartenid) {\n\n        console.log(gartenid)\n        console.log(merkFrei.indexOf(gartenid))\n    \n        if (merkFrei.indexOf(gartenid) === -1){\n          setMerkFrei([\n            ...merkFrei,\n            gartenid\n          ])\n        } else {\n          \n          setMerkFrei(merkFrei.filter(item => item != gartenid))\n        }\n      }\n    \n      const isMerkFrei = (freiId) => {\n        return merkFreiItems.find((el) => el._id === freiId) ? true : false\n      }\n\n    const position = [51.330743159430824, 12.36348580378971]\n    const carrotIcon = L.icon({\n      iconUrl: carrot,\n      iconSize:     [38, 38], // size of the icon\n      shadowSize:   [50, 64], // size of the shadow\n      iconAnchor:   [19, 38],\n      shadowAnchor: [4, 62],  // the same for the shadow\n      popupAnchor:  [0, -38]\n    });\n    \n\n\n    return (\n        <MapContainer center={position} zoom={13} scrollWheelZoom={false}>\n        <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n      {favouritedItems.map(verein => (\n          <Marker\n            key={verein._id}\n            icon = {carrotIcon}\n            position={[\n              verein.geometry.coordinates[0],\n              verein.geometry.coordinates[1]\n            ]}\n          >\n            <Popup >\n            <Card border=\"success\" className=\"mb-1\" >\n          <Card.Body >\n          <Card.Title>{verein.kgvname}</Card.Title>\n          <Card.Text className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-2\"color=\"green\" size={15}/>{verein.adresse.strasse}, {verein.adresse.plz} {verein.adresse.stadt}</Card.Text>\n          <Card.Text className=\"mb-2 text-muted\"><Envelope className=\"mr-2\" color=\"green\" size={15}/>{verein.email}</Card.Text>\n          {web(verein.web) && <Card.Text href={verein.web} className=\"mb-3 text-muted\"><Globe2 className=\"mr-2\" color=\"green\" size={15} /><a className=\"mb-3 text-muted\" href={verein.web}>{verein.web}</a></Card.Text>}\n          <Container className=\"justify-content-center\">\n              <Row >\n                  <Button onClick={() => favouriteGarden(verein._id)} size=\"sm\" className=\"m-1 \" variant='outline-danger'>\n                  {isFavourite(verein._id) ? 'Entfernen' : 'Merken'}\n                  </Button>\n                  <Button size=\"sm\" className=\"m-1\" variant=\"outline-danger\">Teilen</Button>\n              </Row>\n          </Container>\n      </Card.Body>\n  </Card>\n            </Popup>\n          </Marker>  \n        ))}\n        {merkFreiItems.map(garten => (\n                    <Marker\n                      key={garten._id}\n                      icon = {carrotIcon}\n                      position={[\n                        garten.kgv.geometry.coordinates[0],\n                        garten.kgv.geometry.coordinates[1]\n                      ]}\n                    >\n                      <Popup>\n                        <Card border=\"success\">\n                          <Card.Body className=\"mb-1 mt-1\"> \n                              <Card.Text className=\"mb-1 text-muted\"><GeoAltFill className=\"mr-1\" color=\"green\" size={12}/>{garten.kgv.kgvname}</Card.Text>\n                              <Card.Title className=\"mb-1 text-success\"><h4>{garten.titel}</h4></Card.Title>\n                              <Card.Text className=\"mb-1 mt-1 text-muted text-truncate\">{garten.beschreibung}</Card.Text>\n                              <Card.Subtitle className=\"mb-1 mt-1 text-success\"><h5>{garten.preis}‚Ç¨</h5></Card.Subtitle>\n                              <Row >\n                                  <NavLink to={`/frei/${garten._id}`}>\n                                      <Button size=\"sm\" className=\"mr-2 ml-3\" variant=\"outline-danger\">Details</Button>\n                                  </NavLink>\n                                  <Button onClick={() => merkFreiGarten(garten._id)} size=\"sm\" className=\"mr-2 \" variant='outline-danger'>\n                                  {isMerkFrei(garten._id)? <HeartFill className=\"mr-2\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\n                                  {isMerkFrei(garten._id) ? 'Entfernen' : 'Merken'}\n                        </Button>\n                                      <Button size=\"sm\" className=\"mr-2\" variant=\"outline-danger\">Teilen</Button>\n                              </Row>\n                          </Card.Body>\n                      </Card>\n                  </Popup>\n                    </Marker>\n                     ))}  \n      </MapContainer>\n    )\n}\n\nexport default FavoritenMap\n","import React from 'react';\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\nimport { GeoAltFill, Heart, HeartFill } from 'react-bootstrap-icons';\nimport {NavLink} from 'react-router-dom';\n\nfunction FavoritenFreiItem({merkClick, freigarten, merkFreiItems}) {\n\n\n    const isMerkFrei = () => {\n        return merkFreiItems.find((el) => el._id === freigarten._id) ? true : false\n    }\n\n    return (\n        <Container>\n                <Row>\n                <Card border=\"success\" className=\"mb-1\">\n                    <Card.Body className=\"m-1\">\n                        <Row>\n                        <p className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-1\" color=\"green\" size={12}/>{freigarten.kgv.kgvname}</p>\n                        </Row>\n                        <Row>\n                            <Card.Title>{freigarten.titel}</Card.Title>\n                        </Row>\n                         <Row>\n                            <p className=\"mb-2 text-muted row-3 text-truncate\">{freigarten.beschreibung}</p>\n                         </Row>\n                        <Row>\n                            <h5 className=\"text-success\"><strong>{freigarten.preis}‚Ç¨</strong></h5>\n                        </Row>\n    \n                        <Row>\n                            <NavLink to={`/frei/${freigarten._id}`}>\n                                <Button size=\"sm\" className=\"mr-2\" variant=\"outline-danger\">Details</Button>\n                            </NavLink>\n                            <Button onClick={merkClick} size=\"sm\" className=\"mr-2 \" variant='outline-danger'>\n                            {isMerkFrei()? <HeartFill className=\"mr-2\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\n                            {isMerkFrei() ? 'Entfernen' : 'Merken'}\n                        </Button>\n                            <Button size=\"sm\" className=\"mr-2\" variant=\"outline-danger\">Teilen</Button>     \n                        </Row>\n                      \n                    </Card.Body>\n                </Card>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FavoritenFreiItem\n","import React from 'react';\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\nimport { GeoAltFill, Envelope, Globe2, Heart, HeartFill } from 'react-bootstrap-icons';\n\nfunction FavoritenVereinItem({favouritedItems, favClick, verein}) {\n\n    const web = verein.web\n    const email = verein.email\n  \n    const isFavourite = () => {\n      return favouritedItems.find((el) => el._id === verein._id) ? true : false\n    }\n\n\n    return (\n        <Card border=\"success\" className=\"mb-1\" >\n        <Card.Body >\n            <Card.Title>{verein.kgvname}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-2\"color=\"green\" size={17}/>{verein.adresse.strasse}, {verein.adresse.plz} {verein.adresse.stadt}</Card.Subtitle>\n            {email && <Card.Subtitle className=\"mb-2 text-muted\"><Envelope className=\"mr-2\" color=\"green\" size={17}/>{verein.email}</Card.Subtitle>}\n            {web && <Card.Subtitle href={verein.web} className=\"mb-3 text-muted\"><Globe2 className=\"mr-2\" color=\"green\" size={17} /><a className=\"mb-3 text-muted\" href={verein.web}>{verein.web}</a></Card.Subtitle>}\n            <Container className=\"justify-content-center\">\n                <Row >\n                    <Button onClick={favClick} size=\"sm\" className=\"m-1 \" variant='outline-danger'>\n                        {isFavourite()? <HeartFill className=\"mr-2\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\n                        {isFavourite()? 'Entfernen' : 'Merken'}\n                    </Button>\n                    <Button size=\"sm\" className=\"m-1\" variant=\"outline-danger\">Teilen</Button>\n                </Row>\n            </Container>\n          \n            \n        </Card.Body>\n    </Card>\n    )\n}\n\nexport default FavoritenVereinItem\n","import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport Map from \"./Components/Map\";\nimport Header from \"./Components/Header\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Col, Row, Button, Image} from 'react-bootstrap';\nimport FreieGaerten from './Components/FreieGaerten';\nimport Inserieren from './Components/Inserieren';\nimport Verwaltung from './Components/Verwaltung';\nimport KgvItem from './Components/KgvItem';\nimport Favourites from './Components/Favourites';\nimport AnzeigenItem from './Components/AnzeigenItem';\nimport FreiItem from './Components/FreiItem';\nimport FavoritenMap from './Components/FavoritenMap';\nimport FavoritenFreiItem from './Components/FavoritenFreiItem';\nimport FavoritenVereinItem from './Components/FavoritenVereinItem';\nimport VerwaltungsItem from './Components/VerwaltungsItem';\nimport axios from 'axios';\nimport useLocalStorage from './useLocalStorage';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { useHistory } from \"react-router-dom\";\n\n\n\nfunction App() {\n  \n  const [kgvs, setKgvs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [gaerten, setGaerten] = useState([]);\n  const [anzeige, setAnzeige] = useState({titel:'', beschreibung:'', kgv:'', pachtkosten:'', preis:'', verf√ºgbar:'', gartemqm:'', name:'', email:'', telefon:''})\n  const [ownAnzeige, setOwnAnzeige] = useLocalStorage('anzeigen', []);\n  const [favourites, setFavourites] = useLocalStorage('favourite', []);\n\n  const history = useHistory();\n\n  const loadKgvs = (searchQuery) => {\n    const API_URL = \"https://goschreber.herokuapp.com\"\n    const url = `${API_URL}/kgvs`\n    setIsLoading(true);\n    setError(false);\n\n    fetch(url)\n      .then((res) => {\n      \n      console.log(res);\n\n        if (!res.ok) throw new Error(\"Oh noo\");\n        setIsLoading(false);\n        return res.json();\n      })\n      .then((json) => setKgvs(json.data))\n      .catch((err) => setError(true));\n\n  };\n\n    useEffect(loadKgvs, []);\n  \n  \n  const loadGaerten = (searchQuery) => {\n      const API_URL = \"https://goschreber.herokuapp.com\"\n      const url = `${API_URL}/anzeigens`\n      setIsLoading(true);\n      setError(false);\n  \n      fetch(url)\n        .then((res) => {\n        \n        console.log(res);\n  \n          if (!res.ok) throw new Error(\"Oh noo\");\n          setIsLoading(false);\n          return res.json();\n        })\n        .then((json) => setGaerten(json.data))\n        .catch((err) => setError(true));\n        };\n\n      useEffect(loadGaerten, []);\n/* //////////////////////////// ANZEIGEN IN LOCAL STORAGE///////////////////////////////////// */\n\nfunction handleSubmit(e) { \n    e.preventDefault();\n    axios\n        .post(\"https://goschreber.herokuapp.com/anzeigens\", anzeige)\n        .then((res) => {\n            const {_id} = res.data.data;\n            setOwnAnzeige([\n                ...ownAnzeige,\n                _id\n            ]);\n            history.push(`frei/${_id}`);\n        })  \n  }\n  const userAnzeigen = gaerten.filter(({_id}) => ownAnzeige.indexOf(_id) != -1)\n\n  /* ////////////////////////////////////////////////////////////////////////////////////////// */\n\n\n  /* ///////////////////// SETTING FAVOURITES IN LOCAL STORAGE /////////////////////*/\n  /* ////////////////////////////////////////////////////////////////////////////////*/\n\n\n  \n  function favouriteGarden(gardenid) {\n\n    console.log(gardenid)\n    console.log(favourites.indexOf(gardenid))\n\n    if (favourites.indexOf(gardenid) === -1){\n      setFavourites([\n        ...favourites,\n        gardenid\n      ])\n    } else {\n      \n      setFavourites(favourites.filter(item => item != gardenid))\n    }\n  }\n\n    const favouritedItems = kgvs.filter(({_id}) => favourites.indexOf(_id) != -1)\n    console.log(favouritedItems)\n\n/*/////////////////////////////////////////////////////////////////////////////////////////////*/\n\n\nconst [merkFrei, setMerkFrei] = useLocalStorage('merkFreiGarten', []);\n  \nfunction merkFreiGarten(gartenid) {\n\n  console.log(gartenid)\n  console.log(merkFrei.indexOf(gartenid))\n\n  if (merkFrei.indexOf(gartenid) === -1){\n    setMerkFrei([\n      ...merkFrei,\n      gartenid\n    ])\n  } else {\n    \n    setMerkFrei(merkFrei.filter(item => item != gartenid))\n  }\n}\n\n  const merkFreiItems = gaerten.filter(({_id}) => merkFrei.indexOf(_id) != -1)\n  console.log(merkFreiItems)\n/*////////////////////////////////////////////////////////////////////////////*/\n\n\n\n  return (\n      <>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <Container fluid>\n              <Row>\n                <Col xs={8}>\n                  <Map favouritedItems={favouritedItems} favourites={favourites} setFavourites={setFavourites} kgvs={kgvs}/>\n                </Col>\n                <Col>\n                  <Scrollbars style={{ width: \"100%\", height: \"100%\" }}>\n                    {kgvs.map(verein => <KgvItem favouritedItems={favouritedItems} favClick={() => favouriteGarden(verein._id)} verein={verein} key={verein._id}/>)}\n                 </Scrollbars>\n                </Col>\n              </Row>\n            </Container> \n          </Route>\n          <Route exact path=\"/frei\">\n            <Container fluid>\n              <Row>\n            <Col xs={8}>\n              <FreieGaerten ownAnzeige={ownAnzeige} setMerkFrei={setMerkFrei} merkFrei={merkFrei} merkFreiItems={merkFreiItems} gaerten= {gaerten} kgvs={kgvs}/>\n            </Col>  \n            <Col>\n              <Scrollbars style={{ width: \"100%\", height: \"100%\" }}>\n                {gaerten.map(freigarten=> <FreiItem merkFreiItems={merkFreiItems} merkClick={() => merkFreiGarten(freigarten._id)} freigarten={freigarten} key={freigarten._id}/>)}\n              </Scrollbars>\n            </Col>\n            </Row>\n            </Container>\n          </Route>\n          <Route path=\"/frei/:id\"> \n            <AnzeigenItem />\n          </Route>\n          <Route exact path=\"/inserieren\"> \n            <Inserieren handleSubmit={handleSubmit} anzeige={anzeige} setAnzeige={setAnzeige} gaerten= {gaerten} kgvs={kgvs}/>\n          </Route>\n          <Route exact path=\"/verwalten\">\n            <Container className=\"mt-4\"fluid>\n              <Row>\n              <Col xs={8}>\n                <Image src=\"https://www.leipzig-lese.de/media_leipzig_lese/schreber_kopfbild_dsc04811.jpg\" fluid rounded/>\n            </Col>\n            <Col>\n              {userAnzeigen.map(eigAnzeige => <VerwaltungsItem ownAnzeige={ownAnzeige} setOwnAnzeige={setOwnAnzeige} eigAnzeige={eigAnzeige} key={eigAnzeige._id}/>)} \n            </Col>\n              </Row>\n            </Container>\n           \n          </Route>\n          <Route exact path=\"/merken\">\n            <Container fluid>\n              <Row className=\"mt-2\">\n                <Col>\n                  <h4 className=\"text-center\">Merkliste Vereine</h4>\n                  {/* <CopyToClipboard text={favouritedItems.map(el => el.email)}>\n                   <Button>clipboard all email addresses</Button>\n                  </CopyToClipboard> */}\n                  <Scrollbars style={{ width: \"100%\", height: \"100%\" }}>\n                  {favouritedItems.map(verein => <FavoritenVereinItem favClick={() => favouriteGarden(verein._id)} verein={verein} favouritedItems={favouritedItems} setFavourites={setFavourites} favourites={favourites} key={verein._id}/>)}\n                  </Scrollbars>\n                </Col>\n                <Col xs={6}>\n                  <h4 style={{color:\"white\" }}>g</h4>\n                 <FavoritenMap favouritedItems={favouritedItems} setFavourites={setFavourites} favourites={favourites} merkFreiItems={merkFreiItems} setMerkFrei={setMerkFrei} merkFrei={merkFrei}/>\n                </Col>\n                <Col>\n                  <h4 className=\"text-center\">Merkliste G√§rten</h4>\n                  <Scrollbars style={{ width: \"100%\", height: \"100%\" }}>\n                    {merkFreiItems.map(freigarten => <FavoritenFreiItem merkClick={() => merkFreiGarten(freigarten._id)} freigarten={freigarten} key={freigarten._id} merkFreiItems={merkFreiItems} setMerkFrei={setMerkFrei} merkFrei={merkFrei}/>)}\n                  </Scrollbars>\n                </Col>\n              </Row>\n              </Container> \n          </Route>\n        </Switch>  \n      </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router} from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"leaflet/dist/leaflet.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}